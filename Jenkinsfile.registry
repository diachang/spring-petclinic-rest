pipeline {
    agent none
    stages {
        stage('Package') {
            agent {
                docker {
                    image 'maven:3.9.9-eclipse-temurin-17-alpine'
                }
            }
            steps {
                sh 'mvn clean package -DskipTests -B -ntp'
            }
        }
        stage('Build Docker Image') {
            agent any
            options { skipDefaultCheckout() }
            steps {
                sh 'docker --version'

                script{

                    def pom = readMavenPom file: 'pom.xml'

                    // // Forma 1: Usando docker build para misma plataforma del host
                    // // sh 'docker build --help'
                    // // sh 'docker build -t danycenas/spring-petclinic-rest:3.2.1 .'
                    // def app = docker.build("danycenas/${pom.artifactId}:${pom.version}")
                    // docker.withRegistry('https://registry.hub.docker.com/', 'dockerhub-credentials') {
                    //     app.push()
                    //     app.push('latest')
                    // }

                    // Forma 2: Usando docker buildx para multiplatforma
                    sh 'docker run --privileged --rm tonistiigi/binfmt --install all'
                    sh 'docker buildx create --use'
                    sh 'docker buildx inspect --bootstrap'

                    sh 'docker buildx version'

                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                        sh """
                            docker buildx build \
                                -t danycenas/${pom.artifactId}:${pom.version} \
                                -t danycenas/${pom.artifactId}:latest \
                                --platform linux/amd64,linux/arm64 --push .
                        """
                    }

                }
            }
        }
    }
}